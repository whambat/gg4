def func1(arg1, arg2):
    var3 = func4()
    var7 = func5(arg2, arg1)
    def func7(arg8, arg9):
        var14 = func8(var3, var7)
        var15 = arg9 ^ (((988 - arg2 - (var3 + (arg2 | (arg1 + ((var3 - var7 ^ 480) | (arg8 + arg8) + 663))) - ((-822427233 & 91) ^ arg8 ^ arg9) + arg9) ^ var7 & 494) | arg1 & arg8) + var7)
        var16 = ((arg9 | var14) - arg9) & -1350896090
        var17 = (arg2 + ((-904855440 - var7 | (arg9 + var16 | -883 - arg8 | arg2 | var3 - arg1)) + arg1) ^ arg9) - 1356176086
        result = var15 + arg2
        return result
    var18 = func7(arg2, var3)
    def func9(arg19, arg20):
        var21 = var3 ^ var7
        var22 = (arg20 - arg19) ^ arg19
        var23 = arg20 - arg19 | var7
        var24 = var23 | 1816146048 ^ var18
        result = var18 & (-668104689 ^ var3 & (var24 & var7))
        return result
    var25 = func9(arg2, var7)
    var26 = (-193 & (var7 ^ var7)) + -78857900
    var27 = var7 & (var3 & var18)
    var28 = (arg2 - var3 & var7) & var25
    var29 = var28 + var3 | arg1 | var25
    var30 = ((115 & var7) + var29) | var26
    if arg1 < var3:
        var31 = arg2 & var29 + var28
    else:
        var31 = (var27 + var28 ^ var18) + var28
    if var7 < var3:
        var32 = arg1 | var30 - var30 & var18
    else:
        var32 = var26 & var28 & 1738905622
    var33 = (var7 & arg1) - var30 & var3
    var34 = var7 | (arg1 + var28) - arg1
    var35 = (var29 ^ var25) | var33 & var7
    var36 = (arg2 - var18) + (var25 ^ var3)
    var37 = var35 + -382411995 | var7 & 1058033678
    var38 = (arg2 | var33 - var27) | var26
    var39 = var25 - var38 + var18 & var18
    result = var3 + (-898 - (var28 ^ var36 - (var29 ^ var33 - 878) - var36 - arg2) & arg2) | var3 + var34
    return result
def func8(arg10, arg11):
    var12 = 0
    for var13 in xrange(28):
        var12 += (2 - var12) & var12
    return var12
def func4():
    func2()
    result = len(range(44))
    func3()
    return result
def func3():
    global len
    del len
def func2():
    global len
    len = lambda x : 1
def func5(arg4, arg5):
    def func6(acc, rest):
        var6 = 7 & -2 | -4
        if acc == 0:
            return var6
        else:
            result = func6(acc - 1, var6)
            return result
    result = func6(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 40'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
